version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  aws-ecr: circleci/aws-ecr@8.1.3
  kubernetes: circleci/kubernetes@0.4.0

jobs:

#  ------------------------------------------------------------------------------------------------------------------------------------------
#  To lint the Dockerfile
#  ------------------------------------------------------------------------------------------------------------------------------------------

    run-lint:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - run:
            name: install dependencies
            command: |
              sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
              sudo chmod +x /bin/hadolint
        - run:
            name: Run Lint
            command: |
              hadolint Dockerfile
              
#  ------------------------------------------------------------------------------------------------------------------------------------------
#  Build the Dockerimage for the application 
#  ------------------------------------------------------------------------------------------------------------------------------------------

    build-docker-image:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout

        - setup_remote_docker:
            version: 19.03.13

        - run:
            name: Build Docker Image
            command: |
              export TAG=latest
              export IMAGE_NAME=udacity
              docker build -t duongvcn/$IMAGE_NAME:$TAG .
              
#  -------------------------------------------------------------------------------------------------------------------------------------------
#  Push the Dockerimage into DockerHub
#  ------------------------------------------------------------------------------------------------------------------------------------------

    push-docker-image:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - setup_remote_docker:
            version: 19.03.13
        - run:
            name: Push Docker Image to Docker Hub
            command: |
              export TAG=latest
              export IMAGE_NAME=udacity
              docker build -t duongvcn/$IMAGE_NAME:$TAG .
              docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD 
              docker push duongvcn/$IMAGE_NAME:$TAG

# ----------------------------------------------------------------------------------------------------------------------------------------
# Deploy the application from AWS ECR image to AWS EKS
# ---------------------------------------------------------------------------------------------------------------------------------------
    deploy-application:
      executor: aws-eks/python3
      steps:
        - checkout
        - aws-eks/update-kubeconfig-with-authenticator:
            cluster-name: udacity-cluster
            install-kubectl: true
            aws-region: $AWS_DEFAULT_REGION
        - kubernetes/create-or-update-resource:
            resource-file-path: "deployments/deployment.yml"
            resource-name: deployment/udacity

    test-application:
      executor: aws-eks/python3
      steps:
        - aws-eks/update-kubeconfig-with-authenticator:
            cluster-name: udacity-cluster
            install-kubectl: true
            aws-region: $AWS_DEFAULT_REGION
        - run:
            name: Wait for service to be ready
            command: |
              kubectl get pods
              kubectl get services
# ----------------------------------------------------------------------------------------------------------------------------------  
#  To create  LoadBalancer URL for the application as aws-eks orb is not creating LoadBalancer by default
# ----------------------------------------------------------------------------------------------------------------------------------  

    set-loadbalancer:
      executor: aws-eks/python3
      steps:
        - checkout
        - aws-eks/update-kubeconfig-with-authenticator:
            cluster-name: udacity-cluster
            install-kubectl: true
            aws-region: $AWS_DEFAULT_REGION
        - kubernetes/create-or-update-resource:
          resource-file-path: "deployments/loadbalancer.yml"
          resource-name: deployment/udacity         
        - run:
            name: Wait for LB to be ready
            command: |         
              kubectl get service/udacity-service-loadbalancer     
              
# ----------------------------------------------------------------------------------------------------------------------------------------
# Start of Workflow
# ----------------------------------------------------------------------------------------------------------------------------------------
     
workflows:
  default:
    jobs:
      - run-lint
      
      - build-docker-image:
          requires:
            - run-lint
      
      - push-docker-image:
          requires:
            - build-docker-image
      
      - aws-ecr/build-and-push-image:
            docker-login: true
            dockerhub-password: $DOCKER_PASSWORD
            dockerhub-username: $DOCKER_USERNAME
            repo: udacity
            requires:
              - push-docker-image

      - deploy-application:
            requires:
              - aws-ecr/build-and-push-image
      
      - test-application:
          requires:
            - deploy-application
            
      - set-loadbalancer:
          requires:
            - test-application