version: 2.1

jobs:

#  ------------------------------------------------------------------------------------------------------------------------------------------
#  Build and test application
#  ------------------------------------------------------------------------------------------------------------------------------------------

    build:
      docker:
        - image: python:3.7.3-stretch
      steps:
        - checkout
        - run:
            name: Install pip packages
            command: |
              python3 -m venv venv
              . venv/bin/activate
              pip install --upgrade pip
              pip install -r requirements.txt

        - run:
            name: Test with pytest
            command: |
              . venv/bin/activate
              pytest

#  ------------------------------------------------------------------------------------------------------------------------------------------
#  To lint the Dockerfile
#  ------------------------------------------------------------------------------------------------------------------------------------------

    run-lint:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - run:
            name: install dependencies
            command: |
              python3 -m venv venv
              . venv/bin/activate
              pip install -r requirements.txt
              wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 && chmod +x /bin/hadolint
        - save_cache:
            paths:
              - ./venv
              key: v1-dependencies-{{ checksum "requirements.txt" }}
        - run:
            name: Run lint
            command: |
              . venv/bin/activate
              make lint
              
#  ------------------------------------------------------------------------------------------------------------------------------------------
#  Build and Push the Dockerimage for the application 
#  ------------------------------------------------------------------------------------------------------------------------------------------

    build-docker-image:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout

        - setup_remote_docker:
            version: 19.03.13

        - run:
            name: Build and Push Docker Image
            command: |
              docker build -t duongvcn/udacity:latest .
              docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD 
              docker push duongvcn/udacity:latest

# ----------------------------------------------------------------------------------------------------------------------------------------
# Deploy the application to EKS
# ---------------------------------------------------------------------------------------------------------------------------------------
    deploy-infrastructure:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Install dependencies
            command: |
              yum install -y tar gzip
              curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
              mv /tmp/eksctl /usr/local/bin
              eksctl version
              curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.25.0/bin/linux/amd64/kubectl
              chmod +x ./kubectl
              mv ./kubectl /usr/local/bin/kubectl
        - run:
            name: Deploy application with kubernetes
            command: |
              eksctl create cluster --name uda-cluster --region=$AWS_DEFAULT_REGION
              aws sts get-caller-identity
              aws eks update-kubeconfig --name uda-cluster --region $AWS_DEFAULT_REGION
              kubectl get nodes
              kubectl apply -f ./eks/deployment.yaml
              kubectl get pods
              kubectl create -f ./eks/loadbalancer.yaml
              sleep 20
              kubectl get svc


# ----------------------------------------------------------------------------------------------------------------------------------------
# Start of Workflow
# ----------------------------------------------------------------------------------------------------------------------------------------
     
workflows:
  default:
    jobs:
      - build

      - run-lint:
          requires:
            - build
      
      - build-docker-image:
          requires:
            - run-lint
            
      - deploy-infrastructure:
          requires:
            - build-docker-image